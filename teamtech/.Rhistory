View(temp1)
View(all_countries)
all_countries <- read.csv(path,sep='\t')
View(all_countries)
all_countries[,100]
all_countries %>% select(Korea..Dem..People.s.Rep.)
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
all_countries %>% select(Korea..Dem..People.s.Rep.)
all_countries %>% select(Korea..Rep.)
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
ggplot(mortality, aes(y=`Korea..Rep.`,x=1960:2015))+geom_line()
ggplot(all_countries, aes(y=`Korea..Rep.`,x=1960:2015))+geom_line()
plot(all_countries[1:56, 1], all_countries[,100])
ggplot(all_countries, aes(y=`Korea..Rep.`,x=1960:2015))+geom_line()
colnames(mortality)[1] <- "Year"
colnames(all_countries)[1] <- "Year"
View(all_countries)
ggplot(all_countries, aes(y=`Korea..Rep.`,x=1960:2015))+geom_line()
p <- ggplot(all_countries, aes(y=`Korea..Rep.`,x=1960:2015))+geom_line()
p + xlab("Year")
p + ylab("Mortality Rate")
p <- p + ylab("Mortality Rate") + xlab("Year")
p
p <- p + ylab("Mortality Rate per 1000") + xlab("Year")
p <- p + ggtitle("Korea Mortality Rate")
p
p <- p + ggtitle("South Korea Mortality Rate")
p
p <- p + ggtitle("South Korea Mortality Rate")
p
p + labs(colour = "Cylinders")
q <- ggplot(all_countries, aes(y=`Korea..Rep.`,x=1960:2015))+geom_line() + geom_point()
q
q + labs(colour = "Cylinders")
q <- ggplot(all_countries, aes(y=`Korea..Rep.`,x=1960:2015, colors(distinct=TRUE)))+geom_line() + geom_point()
q
q <- ggplot(all_countries, aes(y=`Korea..Rep.`,x=1960:2015, colours(distinct = TRUE)))+geom_line() + geom_point()
q
q <- ggplot(all_countries, aes(y=`Korea..Rep.`,x=1960:2015))+geom_line() + geom_point(aes(colour = qsec))
q
q <- ggplot(all_countries, aes(y=`Korea..Rep.`,x=1960:2015))+geom_line() + geom_point(aes(colour = c("black","yellow","red")))
q
p
q
q <- ggplot(all_countries, aes(y=`Korea..Rep.`,x=1960:2015))+geom_line() + geom_point()
q
q <- q + xlab("Year") + ylab("Mortality Rate per 1000") + ggtitle("South Korea Mortality Rate")
q
q <- ggplot(all_countries, aes(y=`Korea..Rep.`,x=1960:2015, colours=x))+geom_line() + geom_point()
q
q <- ggplot(all_countries, aes(y=`Korea..Rep.`,x=1960:2015, colours=1960:2015))+geom_line() + geom_point()
q
q <- ggplot(all_countries, aes(y=`Korea..Rep.`,x=1960:2015, colour=1960:2015))+geom_line() + geom_point()
q
q <- ggplot(all_countries, aes(y=`Korea..Rep.`,x=1960:2015, color=1960:2015))+geom_line() + geom_point()
q
which(colnames(all_countries) == 'Korea..Rep.')
colnames(all_countries)[126] <- "South Korea"
which(colnames(all_countries) == 'Korea.. Dem. People.s Rep.')
which(colnames(all_countries) == 'Korea..Dem.People.sRep.')
which(colnames(all_countries) == 'Korea..Dem.People.s.Rep.')
which(colnames(all_countries) == 'Korea..Dem..People.s.Rep.')
colnames(all_countries)[193] <- "North Korea"
p
q
q <- q + xlab("Year")
q <- ggplot(all_countries, aes(y=`South Korea`,x=1960:2015, color='South Korea'))+geom_line() + geom_point()
q
q <- ggplot(all_countries, aes(y=`South Korea`,x=1960:2015, color=`South Korea`))+geom_line() + geom_point()
q
ggplot(all_countries, aes(y=`South Korea`,x=1960:2015, color=`South Korea`))+geom_line() + geom_point() +
scale_colour_manual(values = rev(brewer.pal(3,"BuPu")))
ggplot(all_countries, aes(y=`South Korea`,x=1960:2015, color=`South Korea`))+geom_line() + scale_colour_manual(values = rev(brewer.pal(3,"BuPu")))
q
cr <- ggplot(all_countries, aes(y=`Costa Rica`,x=1960:2015, color=`Costa Rica`))+geom_line() + geom_point()
cr
cr <- ggplot(all_countries, aes(y=`Costa.Rica`,x=1960:2015, color=`Costa.Rica`))+geom_line() + geom_point()
cr
korea <- q
costa_rica <- cr
costa_rica <- costa_rica + xlab("Year") + ylab("Mortality Rate per 1000") + ggtitle("Costa Rica Mortality Rate")
costa_rica
cr <- ggplot(all_countries, aes(y=`Costa Rica`,x=1960:2015, color=`Costa.Rica`))+geom_line() + geom_point() + scale_colour_gradient(low = "red", high = "white")
cr
cr <- ggplot(all_countries, aes(y=`Costa.Rica`,x=1960:2015, color=`Costa.Rica`))+geom_line() + geom_point() + scale_colour_gradient(low = "red", high = "white")
cr
cr <- ggplot(all_countries, aes(y=`Costa.Rica`,x=1960:2015, color=`Costa.Rica`))+geom_line() + geom_point() + scale_colour_gradient(low = "white", high = "red")
cr
cr <- ggplot(all_countries, aes(y=`Costa.Rica`,x=1960:2015, color=`Costa.Rica`))+geom_line() + geom_point() + scale_colour_gradient(low = "blue", high = "red")
cr
costa_rica <- cr
korea <- ggplot(all_countries, aes(y=`South Korea`,x=1960:2015, color=`South Korea`))+geom_line() + geom_point() + scale_colour_gradient(low = "blue", high = "red")
korea
costa_rica
costa_rica <- ggplot(all_countries, aes(y=`Costa.Rica`,x=1960:2015, color=`Costa.Rica`))+geom_line() + geom_point() + scale_colour_gradient(low = "blue", high = "red") + xlab("Year") + ylab("Mortality Rate per 1000") + ggtitle("Costa Rica Mortality Rate")
costa_rica
korea <- ggplot(all_countries, aes(y=`South Korea`,x=1960:2015, color=`South Korea`))+geom_line() + geom_point() + scale_colour_gradient(low = "blue", high = "red") + xlab("Year") + ylab("Mortality Rate per 1000") + ggtitle("South Korea Mortality Rate")
korea
path = '/Users/kanamishra/Downloads/API_SP.DYN.CDRT.IN_DS2_en_csv_v2/API_SP.DYN.CDRT.IN_DS2_en_csv_v2.csv'
all_countries <- read.csv(path,sep='\t')
which(colnames(all_countries) == 'Korea..Dem..People.s.Rep.')
colnames(all_countries)[193] <- "North Korea"
which(colnames(all_countries) == 'Korea..Rep.')
colnames(all_countries)[126] <- "South Korea"
korea <- ggplot(all_countries, aes(y=`South Korea`,x=1960:2015, color=`South Korea`))+geom_line() + geom_point() + scale_colour_gradient(low = "blue", high = "red") + xlab("Year") + ylab("Mortality Rate per 1000") + ggtitle("South Korea Mortality Rate")
costa_rica <- ggplot(all_countries, aes(y=`Costa.Rica`,x=1960:2015, color=`Costa.Rica`))+geom_line() + geom_point() + scale_colour_gradient(low = "blue", high = "red") + xlab("Year") + ylab("Mortality Rate per 1000") + ggtitle("Costa Rica Mortality Rate")
path = '/Users/kanamishra/Downloads/API_SP.DYN.CDRT.IN_DS2_en_csv_v2/API_SP.DYN.CDRT.IN_DS2_en_csv_v2.csv'
all_countries <- read.csv(path,sep='\t')
colnames(all_countries)[193] <- "North Korea"
colnames(all_countries)[126] <- "South Korea"
korea <- ggplot(all_countries, aes(y=`South Korea`,x=1960:2015, color=`South Korea`))+geom_line() + geom_point() + scale_colour_gradient(low = "blue", high = "red") + xlab("Year") + ylab("Mortality Rate per 1000") + ggtitle("South Korea Mortality Rate")
costa_rica <- ggplot(all_countries, aes(y=`Costa.Rica`,x=1960:2015, color=`Costa.Rica`))+geom_line() + geom_point() + scale_colour_gradient(low = "blue", high = "red") + xlab("Year") + ylab("Mortality Rate per 1000") + ggtitle("Costa Rica Mortality Rate")
path = '/Users/kanamishra/Downloads/API_SP.DYN.CDRT.IN_DS2_en_csv_v2/API_SP.DYN.CDRT.IN_DS2_en_csv_v2.csv'
all_countries <- read.csv(path,sep='\t')
colnames(all_countries)[193] <- "North Korea"
colnames(all_countries)[126] <- "South Korea"
korea <- ggplot(all_countries, aes(y=`South Korea`,x=1960:2015, color=`South Korea`))+geom_line() + geom_point() + scale_colour_gradient(low = "blue", high = "red") + xlab("Year") + ylab("Mortality Rate per 1000") + ggtitle("South Korea Mortality Rate")
costa_rica <- ggplot(all_countries, aes(y=`Costa.Rica`,x=1960:2015, color=`Costa.Rica`))+geom_line() + geom_point() + scale_colour_gradient(low = "blue", high = "red") + xlab("Year") + ylab("Mortality Rate per 1000") + ggtitle("Costa Rica Mortality Rate")
korea
costa_rica
path = '/Users/kanamishra/Downloads/API_SP.DYN.CDRT.IN_DS2_en_csv_v2/API_SP.DYN.CDRT.IN_DS2_en_csv_v2.csv'
all_countries <- read.csv(path,sep='\t')
colnames(all_countries)[193] <- "North Korea"
colnames(all_countries)[126] <- "South Korea"
korea <- ggplot(all_countries, aes(y=`South Korea`,x=1960:2015, color=`South Korea`))+geom_line() + geom_point() + scale_colour_gradient(low = "blue", high = "red") + xlab("Year") + ylab("Mortality Rate per 1000") + ggtitle("South Korea Mortality Rate")
korea
costa_rica <- ggplot(all_countries, aes(y=`Costa.Rica`,x=1960:2015, color=`Costa.Rica`))+geom_line() + geom_point() + scale_colour_gradient(low = "blue", high = "red") + xlab("Year") + ylab("Mortality Rate per 1000") + ggtitle("Costa Rica Mortality Rate")
costa_rica
korea <- ggplot(all_countries, aes(y=`South Korea`,x=1960:2015, color=`South Korea`))+geom_line() + geom_point(shape='.') + scale_colour_gradient(low = "blue", high = "red") + xlab("Year") + ylab("Mortality Rate per 1000") + ggtitle("South Korea Mortality Rate")
korea
korea <- ggplot(all_countries, aes(y=`South Korea`,x=1960:2015, color=`South Korea`))+geom_line() + geom_point(shape=factor(cyl)) + scale_colour_gradient(low = "blue", high = "red") + xlab("Year") + ylab("Mortality Rate per 1000") + ggtitle("South Korea Mortality Rate")
korea <- ggplot(all_countries, aes(y=`South Korea`,x=1960:2015, color=`South Korea`))+geom_line() + geom_point(shape=0.5) + scale_colour_gradient(low = "blue", high = "red") + xlab("Year") + ylab("Mortality Rate per 1000") + ggtitle("South Korea Mortality Rate")
korea
korea <- ggplot(all_countries, aes(y=`South Korea`,x=1960:2015, color=`South Korea`))+geom_line() + geom_point(size=0.5) + scale_colour_gradient(low = "blue", high = "red") + xlab("Year") + ylab("Mortality Rate per 1000") + ggtitle("South Korea Mortality Rate")
korea
costa_rica <- ggplot(all_countries, aes(y=`Costa.Rica`,x=1960:2015, color=`Costa.Rica`))+geom_line() + geom_point(size=0.5) + scale_colour_gradient(low = "blue", high = "red") + xlab("Year") + ylab("Mortality Rate per 1000") + ggtitle("Costa Rica Mortality Rate")
costa_rica
korea <- ggplot(all_countries, aes(y=`South Korea`,x=1960:2015, color=`South Korea`))+geom_line() + geom_point(size=0.5) + scale_colour_gradient(low = "blue", high = "red") + xlab("Year") + ylab("Mortality Rate per 1000") + ggtitle("South Korea Mortality Rate") + ylim(0,15)
korea
korea <- ggplot(all_countries, aes(y=`South Korea`,x=1960:2015, color=`South Korea`))+geom_line() + geom_point(size=0.5) + scale_colour_gradient(low = "blue", high = "red") + xlab("Year") + ylab("Mortality Rate per 1000") + ggtitle("South Korea Mortality Rate") + ylim(0,15)
korea
costa_rica <- ggplot(all_countries, aes(y=`Costa.Rica`,x=1960:2015, color=`Costa.Rica`))+geom_line() + geom_point(size=0.5) + scale_colour_gradient(low = "blue", high = "red") + xlab("Year") + ylab("Mortality Rate per 1000") + ggtitle("Costa Rica Mortality Rate") + ylim(0,15)
costa_rica
path = '/Users/kanamishra/Downloads/API_SP.DYN.CDRT.IN_DS2_en_csv_v2/API_SP.DYN.CDRT.IN_DS2_en_csv_v2.csv'
all_countries <- read.csv(path,sep='\t')
colnames(all_countries)[193] <- "North Korea"
colnames(all_countries)[126] <- "South Korea"
path = '/Users/kanamishra/Downloads/API_SP.DYN.CDRT.IN_DS2_en_csv_v2/API_SP.DYN.CDRT.IN_DS2_en_csv_v2.csv'
all_countries <- read.csv(path,sep='\t')
colnames(all_countries)[193] <- "North Korea"
colnames(all_countries)[126] <- "South Korea"
korea <- ggplot(all_countries, aes(y=`South Korea`,x=1960:2015, color=`South Korea`))+geom_line() + geom_point(size=0.5) + scale_colour_gradient(low = "blue", high = "red") + xlab("Year") + ylab("Mortality Rate per 1000") + ggtitle("South Korea Mortality Rate") + ylim(0,15)
korea
costa_rica <- ggplot(all_countries, aes(y=`Costa.Rica`,x=1960:2015, color=`Costa.Rica`))+geom_line() + geom_point(size=0.5) + scale_colour_gradient(low = "blue", high = "red") + xlab("Year") + ylab("Mortality Rate per 1000") + ggtitle("Costa Rica Mortality Rate") + ylim(0,15)
costa_rica
path = '/Users/kanamishra/Downloads/API_SP.DYN.CDRT.IN_DS2_en_csv_v2/API_SP.DYN.CDRT.IN_DS2_en_csv_v2.csv'
all_countries <- read.csv(path,sep='\t')
colnames(all_countries)[193] <- "North Korea"
colnames(all_countries)[126] <- "South Korea"
korea <- ggplot(all_countries, aes(y=`South Korea`,x=1960:2015, color=`South Korea`))+geom_line() + geom_point(size=0.5) + scale_colour_gradient(low = "blue", high = "red") + xlab("Year") + ylab("Mortality Rate per 1000") + ggtitle("South Korea Mortality Rate") + ylim(0,15)
korea
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
korea <- ggplot(all_countries, aes(y=`South Korea`,x=1960:2015, color=`South Korea`))+geom_line() + geom_point(size=0.5) + scale_colour_gradient(low = "blue", high = "red") + xlab("Year") + ylab("Mortality Rate per 1000") + ggtitle("South Korea Mortality Rate") + ylim(0,15)
korea
saveRDS(all_countries, "mortality.rds")
all_countries$FeatureType <- 'MortalityRate'
View(all_countries)
?prcomp
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
install.packages("rmarkdown")
install.packages("rmarkdown")
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
RStudio.Version()
library(knitr)
80 + 20 + 527 + 10 + 1500 + 83
phone <- 80
phone
transportation <- 20
groceries <- 527
gym <- 10
rent <- 1500
other <- 83
total <- phone + transportation + groceries + gym + rent + other
semester <- total * 5
year <- semester * 2
c(phone, transportation, groceries, gym, rent, other)
expenses <- c(phone, transportation, groceries, gym, rent, other)
barplot(expenses)
barplot(sort(expenses))
?sort
barplot(sort(expenses, decreasing = TRUE))
?barplot
barplot(sort(expenses, decreasing = TRUE), names.arg = sort(expenses, decreasing = TRUE))
barplot(sort(expenses, decreasing = TRUE), names.arg = expenses)
expenses
expenses <- sort(expenses, decreasing = TRUE)
expenses
barplot(sort(expenses, decreasing = TRUE), names.arg = expenses)
barplot(expenses, names.arg = expenses)
barplot(expenses)
barplot(expenses, names.arg = expenses$)
barplot(expenses, names.arg = expenses$1)
barplot(expenses, names.arg = expenses)
barplot(expenses, names.arg = labels(expenses))
barplot(expenses, names.arg = c("rent", "groceries", "other", "cell phone", "transportation", "gym"
)
)
barplot(expenses, names.arg = c("rent", "groceries", "other", "cell phone", "transportation", "gym"))
barplot(expenses, names.arg = c("rent", "groceries", "other", "cell phone", "transportation", "gym"), space = 1.5)
barplot(expenses, names.arg = c("rent", "groceries", "other", "cell phone", "transportation", "gym"))
a = 3
b = 4
c = sqrt(a^2 + b^2)
choose(n = 5, k = 2)
factorial(4)
n = 5
k = 2
p = 0.5
(factorial(n)/(factorial(k) * factorial(n-k)))*p^k * (1-p)^(n-k)
choose(n, k) * p^k * (1-p)^(n-k)
n = 10
k = 3
p = 1/6
choose(n, k) * p^k * (1-p)^(n-k)
install.packages("knitr")
install.packages("knitr")
install.packages(c("readr", "ggplot2"))
install.packages(c("readr", "ggplot2"))
install.packages(c("readr", "ggplot2"))
install.packages(c("readr", "ggplot2"))
install.packages(c("readr", "ggplot2"))
install.packages(c("readr", "ggplot2"))
install.packages(c("readr", "ggplot2"))
installed.packages("readr")
install.packages("knitr")
install.packages(c("readr"))
install.packages("ggplot2")
install.packages("ggplot2")
update.packages("ggplot2")
library("knitr")
library(knitr)
install.packages(c("stringr", "RColorBrewer", "XML"))
x = 2
3x
3*x^2 + 4*x + 8
x <- -3:3
3*x^2 + 4*x + 8
3*x^2 + 4*x + 8;
80 + 20 + 527 + 10 + 1500 + 83;
phone <- 80;
phone;
transportation <- 20;
groceries <- 527;
gym <- 10;
rent <- 1500;
other <- 83;
total <- phone + transportation + groceries + gym + rent + other;
semester <- total * 5;
year <- semester * 2;
expenses <- c(phone, transportation, groceries, gym, rent, other);
barplot(expenses);
expenses <- sort(expenses, decreasing = TRUE);
barplot(expenses, names.arg = c("rent", "groceries", "other", "cell phone", "transportation", "gym"));
a = 3;
b = 4;
c = sqrt(a^2 + b^2);
choose(n = 5, k = 2);
factorial(4);
n = 5;
k = 2;
p = 0.5;
(factorial(n)/(factorial(k) * factorial(n-k)))*p^k * (1-p)^(n-k);
choose(n, k) * p^k * (1-p)^(n-k);
n = 10;
k = 3;
p = 1/6;
choose(n, k) * p^k * (1-p)^(n-k);
x = 2;
3*x^2 + 4*x + 8;
x <- -3:3;
3*x^2 + 4*x + 8;
github <- 'https://github.com/ucb-stat133/stat133-spring-2018/'
repo <- 'raw/master/data/nba2017-salary-points.RData'
download.file()
download.file(
url = paste0(github, repo),
destfile = "nba2017-salary-points.RData"
)
load("nba2017-salary-points.RData")
ls()
nba2017-salary-points[23]
year
semester
k
all_countries
type(salary)
typeof(salary)
salary
?factor
positon
position
load("nba2017-salary-points")
load("nba2017-salary-points.RData")
shiny::runApp('Documents/teamtech_webapp/teamtech')
runApp('Documents/teamtech_webapp/teamtech')
runApp('Documents/teamtech_webapp/teamtech')
shiny::runApp()
runApp()
runApp('~/TeamTech/Web App/teamtech_webapp/preloaded')
runApp('~/TeamTech/Web App/teamtech_webapp/upload_plot')
runApp('~/TeamTech/Web App/teamtech_webapp/upload_plot')
runApp('~/TeamTech/Web App/teamtech_webapp/upload_plot')
runApp('~/TeamTech/Web App/teamtech_webapp/upload_plot')
shinyUI(fluidPage(
title = "Diamonds Explorer",
plotOutput('plot'),
hr(),
fluidRow(
column(3,
h4("Diamonds Explorer"),
sliderInput('sampleSize', 'Sample Size',
min=1, max=nrow(dataset), value=min(1000, nrow(dataset)),
step=500, round=0),
br(),
checkboxInput('jitter', 'Jitter'),
checkboxInput('smooth', 'Smooth')
),
column(4, offset = 1,
selectInput('x', 'X', names(dataset)),
selectInput('y', 'Y', names(dataset), names(dataset)[[2]]),
selectInput('color', 'Color', c('None', names(dataset)))
),
column(4,
selectInput('facet_row', 'Facet Row', c(None='.', names(dataset))),
selectInput('facet_col', 'Facet Column', c(None='.', names(dataset)))
)
)
))
runApp('~/test')
shinyUI(fluidPage(
title = "Diamonds Explorer",
plotOutput('plot'),
hr(),
fluidRow(
column(3,
h4("Diamonds Explorer"),
sliderInput('sampleSize', 'Sample Size',
min=1, max=nrow(dataset), value=min(1000, nrow(dataset)),
step=500, round=0),
br(),
checkboxInput('jitter', 'Jitter'),
checkboxInput('smooth', 'Smooth')
),
column(4, offset = 1,
selectInput('x', 'X', names(dataset)),
selectInput('y', 'Y', names(dataset), names(dataset)[[2]]),
selectInput('color', 'Color', c('None', names(dataset)))
),
column(4,
selectInput('facet_row', 'Facet Row', c(None='.', names(dataset))),
selectInput('facet_col', 'Facet Column', c(None='.', names(dataset)))
)
)
))
source('~/test/app.R')
shinyUI(fluidPage(
title = "Diamonds Explorer",
plotOutput('plot'),
hr(),
fluidRow(
column(3,
h4("Diamonds Explorer"),
sliderInput('sampleSize', 'Sample Size',
min=1, max=nrow(dataset), value=min(1000, nrow(dataset)),
step=500, round=0),
br(),
checkboxInput('jitter', 'Jitter'),
checkboxInput('smooth', 'Smooth')
),
column(4, offset = 1,
selectInput('x', 'X', names(dataset)),
selectInput('y', 'Y', names(dataset), names(dataset)[[2]]),
selectInput('color', 'Color', c('None', names(dataset)))
),
column(4,
selectInput('facet_row', 'Facet Row', c(None='.', names(dataset))),
selectInput('facet_col', 'Facet Column', c(None='.', names(dataset)))
)
)
))
shinyUI(fluidPage(
title = "Diamonds Explorer",
plotOutput('plot'),
hr(),
fluidRow(
column(3,
h4("Diamonds Explorer"),
sliderInput('sampleSize', 'Sample Size',
min=1, max=nrow(dataset), value=min(1000, nrow(dataset)),
step=500, round=0),
br(),
checkboxInput('jitter', 'Jitter'),
checkboxInput('smooth', 'Smooth')
),
column(4, offset = 1,
selectInput('x', 'X', names(dataset)),
selectInput('y', 'Y', names(dataset), names(dataset)[[2]]),
selectInput('color', 'Color', c('None', names(dataset)))
),
column(4,
selectInput('facet_row', 'Facet Row', c(None='.', names(dataset))),
selectInput('facet_col', 'Facet Column', c(None='.', names(dataset)))
)
)
))
source('~/test/app.R')
shinyUI(fluidPage(
title = "Diamonds Explorer",
plotOutput('plot'),
hr(),
fluidRow(
column(3,
h4("Diamonds Explorer"),
sliderInput('sampleSize', 'Sample Size',
min=1, max=nrow(dataset), value=min(1000, nrow(dataset)),
step=500, round=0),
br(),
checkboxInput('jitter', 'Jitter'),
checkboxInput('smooth', 'Smooth')
),
column(4, offset = 1,
selectInput('x', 'X', names(dataset)),
selectInput('y', 'Y', names(dataset), names(dataset)[[2]]),
selectInput('color', 'Color', c('None', names(dataset)))
),
column(4,
selectInput('facet_row', 'Facet Row', c(None='.', names(dataset))),
selectInput('facet_col', 'Facet Column', c(None='.', names(dataset)))
)
)
))
runApp('~/Desktop')
runApp('~/Desktop')
runApp('~/Desktop')
runApp('~/Desktop')
runApp('~/Desktop')
runApp('~/Desktop')
runApp('~/Desktop')
runApp('~/Desktop')
runApp('~/Desktop')
runApp('~/Desktop')
runApp('~/Desktop')
runApp('~/Desktop')
runApp('~/Desktop')
runApp('~/Desktop')
runApp('~/Desktop')
runApp('~/Desktop')
runApp('~/Desktop')
runApp('~/TeamTech/Web App/teamtech_webapp/upload_plot')
runApp('~/Desktop')
runApp('~/Desktop')
runApp('~/Desktop')
runApp('~/Desktop')
runApp('~/Desktop')
runApp('~/Desktop')
runApp('~/Desktop')
runApp('~/Desktop')
runApp('~/Desktop')
runApp('~/Desktop')
runApp('~/Desktop')
runApp('~/Desktop')
runApp('~/Desktop')
runApp('~/Desktop')
runApp('~/Desktop')
runApp('~/Desktop')
runApp('~/Desktop')
runApp('~/Desktop')
runApp('~/Desktop')
runApp('~/Desktop')
runApp('~/Desktop')
runApp('~/Desktop')
runApp('~/Desktop')
runApp('~/Desktop')
runApp('~/TeamTech/Web App/teamtech_webapp/upload_plot')
runApp('~/Desktop')
runApp('~/Desktop')
runApp('~/Desktop')
runApp('~/Desktop')
runApp('~/Desktop')
runApp('~/Desktop')
runApp('~/Desktop')
runApp('~/Desktop')
runApp('~/Desktop')
runApp('~/Desktop')
runApp('~/Desktop')
runApp('~/Desktop')
runApp('~/Desktop')
runApp('~/Desktop')
runApp('~/Desktop/formatting.R')
runApp('~/TeamTech/Web App/teamtech_webapp/formatting/formatting.R')
runApp('~/TeamTech/Web App/teamtech_webapp/formatting/formatting.R')
runApp('~/TeamTech/Web App/teamtech_webapp/formatting/formatting.R')
runApp('~/TeamTech/Web App/teamtech_webapp/formatting/formatting.R')
